name: Build
on:
  workflow_dispatch:

env:
  PROJECT_NAME: "Open2DX"
  EXPORT_NAME: "iOS"
  
jobs:
  build:
    name: Build
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v3
      - name: Setup godot
        run: |
          curl -L --output godot.zip "https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_macos.universal.zip"
          unzip godot.zip
      - name: Setup godot export templates
        run: |
          # setup export templates
          curl -L --output templates.zip "https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_mono_export_templates.tpz"
          unzip templates.zip
          mkdir -p "/Users/runner/Library/Application Support/Godot/export_templates/4.2.2.stable"
          mv templates/* "/Users/runner/Library/Application Support/Godot/export_templates/4.2.2.stable"
      - name: Setup for exporting
        run: |
          mkdir build
      - name: Export project
        run: |
          ./Godot.app/Contents/MacOS/Godot --headless --export-release "${{ env.EXPORT_NAME }}" "./build/${{ env.PROJECT_NAME }}"
      - name: Build project
        run: |
          cd build
          
          xcodebuild archive -project "${{ env.PROJECT_NAME }}.xcodeproj" -scheme "${{ env.PROJECT_NAME }}" -archivePath "${{ env.PROJECT_NAME }}.xcarchive" -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

          mkdir Payload
          mv "${{ env.PROJECT_NAME }}.xcarchive/Products/Applications/${{ env.PROJECT_NAME }}.app" "Payload/${{ env.PROJECT_NAME }}.app"

          zip -r "${{ env.PROJECT_NAME }}.ipa" "Payload"

          mv "${{ env.PROJECT_NAME }}.ipa" "${{ runner.temp }}/${{ env.PROJECT_NAME }}.ipa"
      - name: Upload application
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.PROJECT_NAME }}"
          path: "${{ runner.temp }}/${{ env.PROJECT_NAME }}.ipa"
          retention-days: 3
